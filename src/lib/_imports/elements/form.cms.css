/* To track used settings, but not import them */
/* FAQ: This avoids duplicate custom-properties in `core-styles.cms.css` */
/*
@import url("../settings/border.css");
@import url("../settings/color.css");
@import url("../settings/font.css");
*/



/* Fonts */

/* FAQ: Setting font on form would erroneously apply to links and buttons */
label,
input,
select,
textarea {
  font-family: var(--global-font-family--sans--portal);
}



/* Labels */

label {
  font-size: var(--global-font-size--small);

  line-height: normal;
  margin-bottom: 0.75em;
}
/* To avoid extra space between field wrappers */
/* FAQ: The known use case is a django.cms.forms `.checkboxselectmultiple` */
li > label:only-child {
  margin-bottom: unset;
}
/* To avoid inline labels for raw form elements */
/* FAQ: Any specific form styling (e.g. django.cms.forms) manages this */
:not(input[type="checkbox"]) + label {
  display: block;
}



/* Fieldsets */

fieldset:not(:last-child) {
  margin-bottom: 3.5rem;
}



/* Fields */

input,
select,
textarea {
  border: var(--global-border--normal);
}
::placeholder {
  color: var(--global-color-primary--dark);
}

input[type="time"],
input[type="date"] {
  font-family: var(--global-font-family--mono);
}

/* To prevent super-long fields */
input:not(
  /* FAQ: These types of fields should not grow to a max */
  [type=time],
  [type=date],
  [type=checkbox],
  [type=radio]
),
select,
textarea {
  max-width: 50ch;
}
input:where( /* Use `:where` so rules are easier to override */
  [type=time],
  [type=date],
  [type=checkbox],
  [type=radio]
) {
  width: min-content;
}

@media (pointer: coarse) {
  input,
  select,
  textarea {
    padding: 12px 12px;
  }
}
@media (pointer: fine), (pointer: none) {
  input,
  select,
  textarea {
    padding: 5px 10px;
  }
}
