@custom-selector :--cms-form
    .forms;

@custom-selector :--cms-form__title
    .title;
@custom-selector :--cms-form__desc
    .description;

@custom-selector :--cms-form__errors
    :where(.form-errors, .field-errors);
@custom-selector :--cms-form__errors_list
    .errorlist;
@custom-selector :--cms-form__errors--form /* submission errors */
    :is(.form-errors .errorlist);
@custom-selector :--cms-form__errors--field /* validation errors */
    :is(.field-errors .errorlist);

@custom-selector :--cms-form__field
    .field-wrapper;
@custom-selector :--cms-form__field--has-required
    :--cms-form__field.required;
@custom-selector :--cms-form__field--has-checkbox
    :--cms-form__field.checkboxinput;

@custom-selector :--cms-form__menu
    /* HACK: Use `:is` not `:where` */
    /* FAQ: To override core-styles.cms html-elements.cms */
    /* HELP: Clients get django-cms-forms via c-form via core-styles.base,
                thus django-cms-forms can be overridden by core-styles.cms,
                yet only (Core-)CMS should ever load django-cms-forms... */
    :is(.radioselect, .checkboxselectmultiple);

@custom-selector :--cms-form__help
    .help-text;

@custom-selector :--cms-form__badge
    .asterisk;

@custom-selector :--cms-form__buttons
    .button-wrapper;
@custom-selector :--cms-form__button
    .form-button;
